{"id":"utility/GridBoundaryChecker.ts","dependencies":[{"name":"C:\\Users\\milad.ziai\\source\\repos\\game-of-life\\tsconfig.json","includedInParent":true,"mtime":1696516462495},{"name":"C:\\Users\\milad.ziai\\source\\repos\\game-of-life\\package.json","includedInParent":true,"mtime":1697201710869}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridBoundaryChecker = void 0;\nvar GridBoundaryChecker = /*#__PURE__*/function () {\n  function GridBoundaryChecker(_numRows, _numCols) {\n    _classCallCheck(this, GridBoundaryChecker);\n    this.numRows = _numRows;\n    this.numCols = _numCols;\n  }\n  _createClass(GridBoundaryChecker, [{\n    key: \"isWithinBoundaries\",\n    value: function isWithinBoundaries(row, col) {\n      return row >= 0 && row < this.numRows && col >= 0 && col < this.numCols;\n    }\n  }]);\n  return GridBoundaryChecker;\n}();\nexports.GridBoundaryChecker = GridBoundaryChecker;"},"sourceMaps":{"js":{"mappings":[{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":13,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":32},"generated":{"line":13,"column":23}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":14,"column":2}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":14,"column":11}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":14,"column":31}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":32},"generated":{"line":14,"column":39}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":34},"generated":{"line":14,"column":41}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":50},"generated":{"line":14,"column":49}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":50},"generated":{"line":14,"column":51}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":50},"generated":{"line":15,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":50},"generated":{"line":15,"column":19}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":50},"generated":{"line":15,"column":26}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":5,"column":50},"generated":{"line":15,"column":45}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":16,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":16,"column":8}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":16,"column":9}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":16,"column":16}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":6,"column":23},"generated":{"line":16,"column":19}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":6,"column":31},"generated":{"line":16,"column":27}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":17,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":17,"column":8}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":17,"column":9}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":17,"column":16}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":7,"column":23},"generated":{"line":17,"column":19}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":17,"column":27}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":18,"column":2}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":19,"column":2}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":19,"column":14}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":19,"column":15}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":19,"column":34}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":20,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":20,"column":7}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":21,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":8,"column":5},"generated":{"line":21,"column":9}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":21,"column":11}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":21,"column":20}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":23},"generated":{"line":21,"column":39}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":34},"generated":{"line":21,"column":42}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":36},"generated":{"line":21,"column":44}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":47},"generated":{"line":21,"column":47}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":10,"column":47},"generated":{"line":21,"column":49}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":22,"column":6}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":15},"generated":{"line":22,"column":13}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":22,"column":16}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":22,"column":20}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":23},"generated":{"line":22,"column":21}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":27},"generated":{"line":22,"column":25}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":22,"column":28}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":22,"column":31}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":22,"column":35}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":38},"generated":{"line":22,"column":36}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":45},"generated":{"line":22,"column":43}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":49},"generated":{"line":22,"column":47}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":52},"generated":{"line":22,"column":50}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":56},"generated":{"line":22,"column":54}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":57},"generated":{"line":22,"column":55}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":61},"generated":{"line":22,"column":59}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":64},"generated":{"line":22,"column":62}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":67},"generated":{"line":22,"column":65}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":71},"generated":{"line":22,"column":69}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":72},"generated":{"line":22,"column":70}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":11,"column":79},"generated":{"line":22,"column":77}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":23,"column":4}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":24,"column":2}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":25,"column":2}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":25,"column":9}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":25,"column":28}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":26,"column":0}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":0}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":7}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":8}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":27}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":30}},{"source":"utility/GridBoundaryChecker.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":27,"column":49}}],"sources":{"utility/GridBoundaryChecker.ts":"export class GridBoundaryChecker {\r\n    private numRows: number;\r\n    private numCols: number;\r\n\r\n    constructor(_numRows: number, _numCols: number) {\r\n        this.numRows = _numRows;\r\n        this.numCols = _numCols;\r\n    }\r\n  \r\n    isWithinBoundaries(row: number, col: number): boolean {\r\n        return row >= 0 && row < this.numRows && col >= 0 && col < this.numCols;\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"412107859396bc72a964d96e64e337ae","cacheData":{"env":{}}}